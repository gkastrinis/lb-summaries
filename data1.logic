+Class(cA), +Class:Value(cA:"class A"),
+Class(cAA), +Class:Value(cAA:"class AA"),
+Class(cB), +Class:Value(cB:"class B"),
+Class(cBB), +Class:Value(cBB:"class BB"),
+Class(cC), +Class:Value(cC:"class C"),
+Class(cCC), +Class:Value(cCC:"class CC"),
+Class(cD), +Class:Value(cD:"class D"),
+Class(cX), +Class:Value(cX:"class X"),
+Class(cY), +Class:Value(cY:"class Y"),
+IsSubclass(cAA, cA),
+IsSubclass(cBB, cB),
+IsSubclass(cCC, cC),

+Field(f_C), +Field:Value(f_C:"C::f"),
+Field(f_X), +Field:Value(f_X:"X::f"),


+SimpleName(factory), +SimpleName:Value(factory:"B factory()"),
+SimpleName(m1), +SimpleName:Value(m1:"D m1(X)"),
+SimpleName(m2), +SimpleName:Value(m2:"D m2(X)"),
+SimpleName(m3), +SimpleName:Value(m3:"void m3(X)"),
+SimpleName(main), +SimpleName:Value(main:"D main(A)"),


/**** A::factory ****/
+Method(factory_A), +Method:Value(factory_A:"A::factory"),
+Method:Class[factory_A] = cA, +Method:Lookup[factory, 0, cA] = factory_A,
+Var(factory_A_this), +Var:Value(factory_A_this:"A::factory_this"), +Var:Class[factory_A_this] = cA,
+Var(factory_A_ret), +Var:Value(factory_A_ret:"A::factory_return"), +Var:Class[factory_A_ret] = cB,
+FormalParam[0, factory_A] = factory_A_this,
+Return[factory_A] = factory_A_ret,

+Heap(h1_B), +Heap:Value(h1_B:"h1::B"), +Heap:Class[h1_B] = cB,
+Var(t1), +Var:Value(t1:"t1"), +Var:Class[t1] = cB,
+AssignHeapToVar(h1_B, t1, factory_A),

+Heap(h2_C), +Heap:Value(h2_C:"h2::C"), +Heap:Class[h2_C] = cC,
+Var(t2), +Var:Value(t2:"t2"), +Var:Class[t2] = cC,
+AssignHeapToVar(h2_C, t2, factory_A),
+AssignVarToField(t2, t1, f_C, factory_A),

+AssignVarToVar(t1, factory_A_ret, factory_A),


/**** AA::factory ****/
+Method(factory_AA), +Method:Value(factory_AA:"AA::factory"),
+Method:Class[factory_AA] = cAA, +Method:Lookup[factory, 0, cAA] = factory_AA,
+Var(factory_AA_this), +Var:Value(factory_AA_this:"AA::factory_this"), +Var:Class[factory_AA_this] = cAA,
+Var(factory_AA_ret), +Var:Value(factory_AA_ret:"AA::factory_return"), +Var:Class[factory_AA_ret] = cB,
+FormalParam[0, factory_AA] = factory_AA_this,
+Return[factory_AA] = factory_AA_ret,

+Heap(h3_BB), +Heap:Value(h3_BB:"h3::BB"), +Heap:Class[h3_BB] = cBB,
+Var(t3), +Var:Value(t3:"t3"), +Var:Class[t3] = cB,
+AssignHeapToVar(h3_BB, t3, factory_AA),

+Heap(h4_CC), +Heap:Value(h4_CC:"h4::CC"), +Heap:Class[h4_CC] = cCC,
+Var(t4), +Var:Value(t4:"t4"), +Var:Class[t4] = cC,
+AssignHeapToVar(h4_CC, t4, factory_AA),
+AssignVarToField(t4, t3, f_C, factory_AA),

+AssignVarToVar(t3, factory_AA_ret, factory_AA),


/**** B::m1 ****/
+Method(m1_B), +Method:Value(m1_B:"B::m1"),
+Method:Class[m1_B] = cB, +Method:Lookup[m1, 0, cB] = m1_B,
+Var(m1_B_this), +Var:Value(m1_B_this:"B::m1_this"), +Var:Class[m1_B_this] = cB,
+Var(m1_B_arg1_X), +Var:Value(m1_B_arg1_X:"B::m1_arg1(X)"), +Var:Class[m1_B_arg1_X] = cX,
+Var(m1_B_ret), +Var:Value(m1_B_ret:"B::m1_return"), +Var:Class[m1_B_ret] = cD,
+FormalParam[0, m1_B] = m1_B_this, +FormalParam[1, m1_B] = m1_B_arg1_X,
+Return[m1_B] = m1_B_ret,

+Var(t7), +Var:Value(t7:"t7"), +Var:Class[t7] = cC,
+AssignFieldToVar(m1_B_this, f_C, t7, m1_B),

+Invocation(i3), +Invocation:Value(i3:"t8 = t7.m2(m1_B_arg1_X)"),
+Invocation:InMethod[i3] = m1_B,
+Invocation:Base[i3] = t7,
+Invocation:SimpleName[i3] = m2, +Invocation:Descriptor[i3] = 0,
+ActualParam[0, i3] = t7, +ActualParam[1, i3] = m1_B_arg1_X,
+Var(t8), +Var:Value(t8:"t8"), +Var:Class[t8] = cD,
+AssignReturnValueToVar(i3, t8, m1_B),

+AssignVarToVar(t8, m1_B_ret, m1_B),


/**** BB::m1 ****/
+Method(m1_BB), +Method:Value(m1_BB:"BB::m1"),
+Method:Class[m1_BB] = cBB, +Method:Lookup[m1, 0, cBB] = m1_BB,
+Var(m1_BB_this), +Var:Value(m1_BB_this:"BB::m1_this"), +Var:Class[m1_BB_this] = cBB,
+Var(m1_BB_arg1_X), +Var:Value(m1_BB_arg1_X:"BB::m1_arg1(X)"), +Var:Class[m1_BB_arg1_X] = cX,
+Var(m1_BB_ret), +Var:Value(m1_BB_ret:"BB::m1_return"), +Var:Class[m1_BB_ret] = cD,
+FormalParam[0, m1_BB] = m1_BB_this, +FormalParam[1, m1_BB] = m1_BB_arg1_X,
+Return[m1_BB] = m1_BB_ret,

+Heap(h5_D), +Heap:Value(h5_D:"h5::D"), +Heap:Class[h5_D] = cD,
+Var(t9), +Var:Value(t9:"t9"), +Var:Class[t9] = cD,
+AssignHeapToVar(h5_D, t9, m1_BB),

+Invocation(i4), +Invocation:Value(i4:"t9.m3(m1_BB_arg1_X)"),
+Invocation:InMethod[i4] = m1_BB,
+Invocation:Base[i4] = t9,
+Invocation:SimpleName[i4] = m3, +Invocation:Descriptor[i4] = 0,
+ActualParam[0, i4] = t9, +ActualParam[1, i4] = m1_BB_arg1_X,

+AssignVarToVar(t9, m1_BB_ret, m1_BB),


/**** C::m2 ****/
+Method(m2_C), +Method:Value(m2_C:"C::m2"),
+Method:Class[m2_C] = cC, +Method:Lookup[m2, 0, cC] = m2_C,
+Var(m2_C_this), +Var:Value(m2_C_this:"C::m2_this"), +Var:Class[m2_C_this] = cC,
+Var(m2_C_arg1_X), +Var:Value(m2_C_arg1_X:"C::m2_arg1(X)"), +Var:Class[m2_C_arg1_X] = cX,
+Var(m2_C_ret), +Var:Value(m2_C_ret:"C::m2_return"), +Var:Class[m2_C_ret] = cD,
+FormalParam[0, m2_C] = m2_C_this, +FormalParam[1, m2_C] = m2_C_arg1_X,
+Return[m2_C] = m2_C_ret,

+Heap(h6_D), +Heap:Value(h6_D:"h6::D"), +Heap:Class[h6_D] = cD,
+Var(t10), +Var:Value(t10:"t10"), +Var:Class[t10] = cD,
+AssignHeapToVar(h6_D, t10, m2_C),

+Invocation(i5), +Invocation:Value(i5:"t10.m3(m2_C_arg1_X)"),
+Invocation:InMethod[i5] = m2_C,
+Invocation:Base[i5] = t10,
+Invocation:SimpleName[i5] = m3, +Invocation:Descriptor[i5] = 0,
+ActualParam[0, i5] = t10, +ActualParam[1, i5] = m2_C_arg1_X,

+AssignVarToVar(t10, m2_C_ret, m2_C),


/**** CC::m2 ****/
+Method(m2_CC), +Method:Value(m2_CC:"CC::m2"),
+Method:Class[m2_CC] = cCC, +Method:Lookup[m2, 0, cCC] = m2_CC,
+Var(m2_CC_this), +Var:Value(m2_CC_this:"CC::m2_this"), +Var:Class[m2_CC_this] = cCC,
+Var(m2_CC_arg1_X), +Var:Value(m2_CC_arg1_X:"CC::m2_arg1(X)"), +Var:Class[m2_CC_arg1_X] = cX,
+Var(m2_CC_ret), +Var:Value(m2_CC_ret:"CC::m2_return"), +Var:Class[m2_CC_ret] = cD,
+FormalParam[0, m2_CC] = m2_CC_this, +FormalParam[1, m2_CC] = m2_CC_arg1_X,
+Return[m2_CC] = m2_CC_ret,

+Heap(h7_D), +Heap:Value(h7_D:"h7::D"), +Heap:Class[h7_D] = cD,
+Var(t11), +Var:Value(t11:"t11"), +Var:Class[t11] = cD,
+AssignHeapToVar(h7_D, t11, m2_CC),

+Invocation(i6), +Invocation:Value(i6:"t11.m3(m2_CC_arg1_X)"),
+Invocation:InMethod[i6] = m2_CC,
+Invocation:Base[i6] = t11,
+Invocation:SimpleName[i6] = m3, +Invocation:Descriptor[i6] = 0,
+ActualParam[0, i6] = t11, +ActualParam[1, i6] = m2_CC_arg1_X,

+AssignVarToVar(t11, m2_CC_ret, m2_CC),


/**** D::m3 ****/
+Method(m3_D), +Method:Value(m3_D:"D::m3"),
+Method:Class[m3_D] = cD, +Method:Lookup[m3, 0, cD] = m3_D,
+Var(m3_D_this), +Var:Value(m3_D_this:"D::m3_this"), +Var:Class[m3_D_this] = cD,
+Var(m3_D_arg1_X), +Var:Value(m3_D_arg1_X:"D::m3_arg1(X)"), +Var:Class[m3_D_arg1_X] = cX,
+FormalParam[0, m3_D] = m3_D_this, +FormalParam[1, m3_D] = m3_D_arg1_X,

+AssignVarToField(m3_D_arg1_X, m3_D_this, f_X, m3_D),


/**** X::main ****/
+Method(main_X), +Method:Value(main_X:"X::main"),
+Method:Class[main_X] = cX, +Method:Lookup[main, 0, cX] = main_X,
+Var(main_X_this), +Var:Value(main_X_this:"X::main_this"), +Var:Class[main_X_this] = cX,
+Var(main_X_arg1_A), +Var:Value(main_X_arg1_A:"X::main_arg1(A)"), +Var:Class[main_X_arg1_A] = cA,
+Var(main_X_ret), +Var:Value(main_X_ret:"X::main_return"), +Var:Class[main_X_ret] = cD,
+FormalParam[0, main_X] = main_X_this,
+FormalParam[1, main_X] = main_X_arg1_A,
+Return[main_X] = main_X_ret,

+Invocation(i1), +Invocation:Value(i1:"t5 = main_X_arg1_A.factory()"),
+Invocation:InMethod[i1] = main_X,
+Invocation:Base[i1] = main_X_arg1_A,
+Invocation:SimpleName[i1] = factory, +Invocation:Descriptor[i1] = 0,
+ActualParam[0, i1] = main_X_arg1_A,
+Var(t5), +Var:Value(t5:"t5"), +Var:Class[t5] = cB,
+AssignReturnValueToVar(i1, t5, main_X),

+Invocation(i2), +Invocation:Value(i2:"t6 = t5.m1(main_X_this)"),
+Invocation:InMethod[i2] = main_X,
+Invocation:Base[i2] = t5,
+Invocation:SimpleName[i2] = m1, +Invocation:Descriptor[i2] = 0,
+ActualParam[0, i2] = t5, +ActualParam[1, i2] = main_X_this,
+Var(t6), +Var:Value(t6:"t6"), +Var:Class[t6] = cD,
+AssignReturnValueToVar(i2, t6, main_X),

+AssignVarToVar(t6, main_X_ret, main_X),



+Var(end), +Var:Value(end:"end").
